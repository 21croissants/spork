= Spork

* http://github.com/timcharper/spork

== SYNOPSIS:

Spork is a Drb spec server (similar to the script/spec_server provided by rspec-rails), except rather than using the Rails constant unloading to reload your files, it forks a copy of the server each time you run your specs.  The result?  Spork runs more solid: it doesn't get corrupted over time, and it properly handles modules and any voo-doo meta programming you may have put in your app.

Because Spork uses Kernel.fork, it only works on POSIX systems.  This means Windows users are not invited to this party.  Sorry :(

Spork is still experimental, but is performing solid for us.

== INSTALL:

  [sudo] gem install timcharper-spork --source http://gems.github.com/

alternatively:

  git clone git://github.com/timcharper/spork.git
  cd spork
  gem build spork.gemspec
  sudo gem install spork.gemspec

== Usage

From a terminal, change to your project directory.

Then, bootstrap your spec/spec_helper.rb file.

  spork --bootstrap

Next, edit spec/spec_helper.rb and follow the instructions that were put at the top.

Finally, run spork.  A spec DRb server will be running!

  spork

To get the TextMate RSpec bundle to use spork, go to config->advanced->shell variables, and add TM_RSPEC_OPTS=--drb.

To run from the command line, use spec --drb spec/lib/my_spec.rb

Or, you could add --drb to your spec.opts file.

== Some potential issues and ways to overcome them:

=== ActiveRecord reports "connection has gone away" for the first few specs

Not sure why this happens, but if you simply add a line to re-establish your database connection on each line as follows, the problem goes away:

  Spork.each_run do
    ActiveRecord::Base.establish_connection # make sure that the db connection is ready.
  end

== Kudos to

* Ben Mabey - help with documentation, testing, suggestions.
* David Chelimsky - for the fine RSpec testing framework, and the original rspec-rails spec_server implementation, which Spork has built upon.
* Lead Media Partners - just for being an awesome place to work.